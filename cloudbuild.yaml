substitutions:
  _PROJECT:        "${_PROJECT}"
  _REGION:         "${_REGION}"
  _REPO:           "${_REPO}"
  _CLUSTER:        "${_CLUSTER}"
  _CLUSTER_REGION: "${_CLUSTER_REGION}"
  _DB_HOST:        "${_DB_HOST}"
  _DB_NAME:        "${_DB_NAME}"
  _DB_USER:        "${_DB_USER}"
  _DB_PASS:        "${_DB_PASS}"

steps:
# 1) Build & push the Docker image
- name: "gcr.io/cloud-builders/docker"
  args:
    - "build"
    - "-t"
    - "${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/simple-webapp:$SHORT_SHA"
    - "."

images:
  - "${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/simple-webapp:$SHORT_SHA"

# 2) Fetch GKE credentials
- name: "gcr.io/cloud-builders/gcloud"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      gcloud container clusters get-credentials ${_CLUSTER} \
        --region ${_CLUSTER_REGION} \
        --project ${_PROJECT}

# 3) Render & apply your K8s manifests with the DB vars injected
- name: "gcr.io/cloud-builders/kubectl"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      # install envsubst
      apt-get update && apt-get install -y gettext-base

      # apply Service
      envsubst < kube-files/service.yaml | kubectl apply -f -

      # apply Deployment (will substitute DB_HOST, DB_USER, etc.)
      envsubst < kube-files/deployment.yaml | kubectl apply -f -

      # apply Ingress
      kubectl apply -f kube-files/ingress.yaml
